<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pigeon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_blend = c_yellow
/////////////////////Propriété de l'agent///////////////////////////
MSpeed = 10+random(5);

Etat = 1;

Fonction = 0;
Classe = 0;
Camp = 1;

Moral = random(200)-100;

Combat = 0;

Cadence = 0;
Officier = id;
Officiel = 0;
Grade = 1;
Cible = noone;

Obj_inf = noone;
PousseToi = 0;
Enervement = 0;
/////////////////////Gestion environnement//////////////////////////
Z = 0;
Z1 = 0;
Z2 = 0; 
Z3 = 0;
Z4 = 0;
Z5 = 0; 
Z6 = 0;
Z7 = 0; 
Z8 = 0;

Alpha = 0;

Dir1 = 0;
Dir2 = 0;

///////////////////////////////////////////////////////////////////
Ordre = 0;
Chance = random(100);//Variable qui indique si l'agent va mourir ou non

////////////////////////////////////////////////////////////////////
Contact = 0//Indique que l'agent touche quelqu'un d'autre
A = noone;//Autre Agent sélectionné pour d'eventuelle action
xx = x;//Pour eviter que l'agent se prenne en compte, lors des perceptions il sera deplacé loin et les calculs seront fait a partir de ses anciennes coordonnés
Action = IA_repos();
t = 0;//timer
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(Officier)
    {
    ds_list_delete(Officier.Regiment,ds_list_find_index(Officier.Regiment,id));
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_angle = direction;//Le sprite est affiché selon la direction de l'agent
Chance = random(100);

if Ordre == 0 //Quand l'agent est livré a lui même mais toujours receptifs
    {
    if instance_exists(Officier)
        {
        //if Officiel == 1
            {
            Cible = Officier.CibleRegiment;
            
            if instance_exists(Cible) == false
                {
                Dir1 = point_direction(x,y,Officier.x,Officier.y)
                }
            else
                {
                Dir1 = point_direction(x,y,Cible.x,Cible.y)
                }
            IA_deplacement();
            /*if ds_list_size(Officier.PerceptAgentEnnemi) != 0
                {
                Cible = ds_list_find_value(Officier.PerceptAgentEnnemi,0)
                
                if instance_exists(Cible)//normalement c'est l'agent le plus proche
                    {
                    //if sign(Cible.Camp) != sign(Camp)//Si pas dans le même camp
                        {
                        if distance_to_object(Cible)&lt; 300
                            {
                            IA_attaque()
                            }
                        else
                            {
                            IA_deplacement();
                            }
                        }
                    }
                }
            else
                {
                Cible = Officier;
                IA_deplacement();
                }*/
            }
        }
    else
        {
        with(instance_create(x,y,Off_inf))
            {
            Camp = other.Camp;
            }
        instance_destroy();
        }
    }
else
    {
    IA_deplacement();
    
    }
    
/////////////////////////////// REFLEXE ////////////////////////////
xx = x;
x = - 5000
A = instance_nearest(xx+lengthdir_x(10, direction),y+lengthdir_y(10, direction),obj_agent);
x = xx;

if PousseToi &gt; 0
    {
    speed = PousseToi  
    PousseToi -= 0.1;
    }

if instance_exists(A)
&amp;&amp; distance_to_object(A) &lt; speed+1
&amp;&amp; A.id != id
    {
    if collision_circle(x,y,17,obj_agent,1,1) == noone
        {
        Contact = 0;
        }
    if collision_point(x,y,obj_agent,1,1) != noone
        {
        x += random(10)-5;
        y += random(10)-5;
        }
    
    Agent = collision_circle(x+lengthdir_x(16, direction),y+lengthdir_y(16, direction),4,obj_agent,0,1)
    
    if Agent != noone
        {
        speed = 0;
        }
    
    if instance_exists(Agent)
        {
        Agent.Contact = 1
        if abs(Agent.direction-direction) &lt; 90
            {
            Dir2 = direction+random(Enervement)-Enervement/2
            if Grade &lt; Agent.Grade
                {
                //speed = 2;
                //Dir2 = Agent.direction
                PousseToi += 1+Agent.PousseToi;
                Enervement += 0.5;
                //Agent.speed = 0;
                }
            else
                {
                if Grade == Agent.Grade
                    {
                    if Ordre &lt; Agent.Ordre
                        {
                        //speed = 2;
                        //Dir2 = Agent.direction
                        PousseToi += 1+Agent.PousseToi;
                        Enervement += 0.5;
                        //Agent.speed = 0;
                        }
                    else
                        {
                        if Ordre == Agent.Ordre
                            {
                            if id &gt; Agent.id
                                {
                                //speed = 2
                                //Dir2 = Agent.direction
                                PousseToi += 1+Agent.PousseToi;
                                Enervement += 0.5;
                                //Agent.speed = 0;
                                }
                            }
                        }
                    }
                }
            }
        else
            {
            if Grade &lt; Agent.Grade
                {
                //speed = 2;
                Dir2 = -Agent.direction+90
                PousseToi += 1+Agent.PousseToi;
                Enervement += 0.5;
                //Agent.speed = 0;
                }
            else
                {
                if Grade == Agent.Grade
                    {
                    if Ordre &lt; Agent.Ordre
                        {
                        //speed = 2;
                        Dir2 = -Agent.direction+90
                        PousseToi += 1+Agent.PousseToi;
                        Enervement += 0.5;
                        //Agent.speed = 0;
                        }
                    else
                        {
                        if Ordre == Agent.Ordre
                            {
                            if id &gt; Agent.id
                                {
                                //speed = 2
                                Dir2 = -Agent.direction+90
                                PousseToi += 1+Agent.PousseToi;
                                Enervement += 0.5;
                                //Agent.speed = 0;
                                }
                            }
                        }
                    }
                }
            }
        /*if PousseToi &gt; 0
            {
            speed += 0.1 
            PousseToi -= 0.1;
            }*/
        }
    /*if collision_point(x+lengthdir_x(speed, direction),y+lengthdir_y(speed, direction),obj_agent,0,1) != noone
    //if place_meeting(x+lengthdir_x(speed, direction),y+lengthdir_y(speed, direction),obj_agent)
        {
        speed = 0;
        }*/
    }
else
    {
    if PousseToi &gt; 0
        {
        PousseToi --;
        }
    if Enervement &gt; 0
        {
        Enervement --;
        }
    }

if PousseToi &gt; 0
    {
    direction = Dir2+random(Enervement)-Enervement/2
    }
else
    {
    direction = Dir1/*+random(Enervement)-Enervement/2;*/
    }
if PousseToi &lt; 0
    {
    PousseToi = 0;
    }
else
    {
    if PousseToi &gt; 3
        {
        PousseToi = 3;
        }
    }
    
if Enervement &lt; 0
    {
    Enervement = 0;
    }
else
    {
    if Enervement &gt; 20
        {
        Enervement = 20;
        }
    }

/*if position_meeting(x+lengthdir_x(bbox_right+3, direction),y+lengthdir_y(bbox_right+3, direction),obj_agent)
    {
    speed = 0;
    }
if position_meeting(x+lengthdir_x(bbox_right-1, direction),y+lengthdir_y(bbox_right-1, direction),obj_agent)
    {
    speed = -1;
    }*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

if instance_exists(Officier)
    {
    draw_text(x,y-5,Officier.id)
    }
draw_text(x,y-15,id)
if instance_exists(Cible)
    {
    draw_text(x,y-25,object_get_name(Cible.object_index))
    }
draw_text(x,y-35,PousseToi)
draw_text(x,y-45,Enervement)
draw_text(x,y-55,speed)
draw_circle(x+lengthdir_x(16, direction),y+lengthdir_y(16, direction),4,false)
/*if instance_exists(Officier)
    {draw_text(x,y-15,Officier.id)}*/
/*draw_text(x,y-15,PerceptAgent[0])
draw_text(x,y-25,PerceptAgent[1])
draw_text(x,y-35,PerceptAgent[2])
draw_text(x,y-45,PerceptAgent[3])
draw_text(x,y-55,PerceptAgent[4])
draw_text(x,y-65,PerceptAgent[5])
draw_text(x,y-75,PerceptAgent[6])

if PerceptAgent[0] != noone &amp;&amp; instance_exists(PerceptAgent[0])
    draw_line(x,y,PerceptAgent[0].x,PerceptAgent[0].y);
if PerceptAgent[1] != noone &amp;&amp; instance_exists(PerceptAgent[1])
    draw_line(x,y,PerceptAgent[1].x,PerceptAgent[1].y);
if PerceptAgent[2] != noone &amp;&amp; instance_exists(PerceptAgent[2])
    draw_line(x,y,PerceptAgent[2].x,PerceptAgent[2].y);
if PerceptAgent[3] != noone &amp;&amp; instance_exists(PerceptAgent[3])
    draw_line(x,y,PerceptAgent[3].x,PerceptAgent[3].y);
if PerceptAgent[4] != noone &amp;&amp; instance_exists(PerceptAgent[4])
    draw_line(x,y,PerceptAgent[4].x,PerceptAgent[4].y);
if PerceptAgent[5] != noone &amp;&amp; instance_exists(PerceptAgent[5])
    draw_line(x,y,PerceptAgent[5].x,PerceptAgent[5].y);
if PerceptAgent[6] != noone &amp;&amp; instance_exists(PerceptAgent[6])
    draw_line(x,y,PerceptAgent[6].x,PerceptAgent[6].y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
